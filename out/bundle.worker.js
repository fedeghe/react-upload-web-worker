/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!****************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js!./source/uww.js ***!
  \****************************************************************/
eval("self.requests = {};\n\nself.onmessage = function (event) {\n  var data = event.data,\n      _event$data = event.data,\n      id = _event$data.id,\n      url = _event$data.url,\n      file = _event$data.file,\n      _event$data$action = _event$data.action,\n      action = _event$data$action === void 0 ? false : _event$data$action;\n  var _self = self,\n      requests = _self.requests;\n  if (!action) return;\n\n  switch (action) {\n    case 'startUpload':\n      requests[id] = upload({\n        id: id,\n        url: url,\n        file: file,\n        worker: self\n      });\n      break;\n\n    case 'abortUpload':\n      if (id in requests) {\n        requests[id].xhr.abort();\n        requests[id].xhr = null;\n        delete requests[id];\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  postMessage(data);\n};\n\nvar startpload = function startpload(_ref) {\n  var id = _ref.id,\n      url = _ref.url,\n      file = _ref.file,\n      worker = _ref.worker;\n\n  var xhr = new XMLHttpRequest(),\n      total = file.size,\n      progress = function progress(e) {\n    worker.postMessage({\n      action: 'progress',\n      id: id,\n      fileName: file.name,\n      progress: {\n        percent: 100 * e.loaded / total,\n        loaded: e.loaded,\n        total: total\n      }\n    });\n  };\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', progress);\n  } else {\n    xhr.addEventListener('progress', progress);\n  }\n\n  xhr.addEventListener('loadend', function () {\n    if (xhr.status === 200 && xhr.readyState === 4) {\n      worker.postMessage({\n        action: 'done',\n        fileName: file.name,\n        id: id\n      });\n    }\n  });\n  xhr.addEventListener('error', function () {\n    worker.postMessage({\n      action: 'error',\n      id: id,\n      fileName: file.name,\n      data: {\n        status: xhr.status\n      }\n    });\n  });\n  xhr.open('PUT', url, true);\n  xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n  xhr.setRequestHeader('Access-Control-Allow-Headers', '*');\n  xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n  xhr.send(file);\n  return xhr;\n};\n\n//# sourceURL=webpack://react-upload-web-worker/./source/uww.js?./node_modules/babel-loader/lib/index.js");
/******/ })()
;